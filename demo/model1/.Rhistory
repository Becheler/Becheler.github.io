points(spain_sampling, pch=4, col="blue")
dev.off() #only 129kb in size
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
points(spain_sampling, pch=4, col="blue")
print(gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
)
points(spain_sampling, pch=4, col="blue")
points(sicilia_sampling, pch=4, col="red")
plot(gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
)
points(spain_sampling, pch=4, col="blue")
points(sicilia_sampling, pch=4, col="red")
getwd()
spain_sampling <- readOGR(dsn = "output", layer = "spain")
library("raster")
library("rgdal")
library(rasterVis)
library(ggplot2)
N_stack <- stack("output/N.tif")
spain_sampling <- readOGR(dsn = "output", layer = "spain")
sicilia_sampling <- readOGR(dsn = "output", layer = "sicilia")
plot(N_stack[[nlayers(N_stack)]])
points(spain_sampling, pch=4, col="blue")
points(sicilia_sampling, pch=4, col="red")
?plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
# Get range of data values across the two rasters
rng <- c()
for(i in 1:99){
rng = range( c( rng, getValues( N_stack[[i]] ) ), na.rm = TRUE )
}
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
points(spain_sampling, pch=4, col="blue")
points(sicilia_sampling, pch=4, col="red")
?gplot
s <- N_stack[[nlayers(N_stack)]]
plot(N_stack[[nlayers(N_stack)]], col = "green")
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
?geom_point
gplot(N_stack[[nlayers(N_stack)]]) +
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(aes(shape = spain_sampling )) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
p <- gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
p + points(spain_sampling, pch=4, col="blue")
p + points(sicilia_sampling, pch=4, col="red")
print(p)
p <- p + points(spain_sampling, pch=4, col="blue")
p <- p + points(sicilia_sampling, pch=4, col="red")
print(p)
p <- gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
p <- p + points(spain_sampling, pch=4, col="blue")
p <- p + points(sicilia_sampling, pch=4, col="red")
?addp_oints
?points
?gploy
?gplot
?rasterVis
?xyplot
?gplot
points(spain_sampling, pch=4, col="blue")
points(sicilia_sampling, pch=4, col="red")
p <- gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
points(spain_sampling, pch=4, col="blue")
points(spain_sampling, pch=4, col="blue")
points(spain_sampling, pch=4, col="blue")
points(sicilia_sampling, pch=4, col="red")
points(spain_sampling, pch=4, col="blue")
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
points(spain_sampling, pch=4, col="blue")
points(sicilia_sampling, pch=4, col="red")
points(spain_sampling, pch=4, col="blue")
dev.off() #only 129kb in size
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
points(spain_sampling, pch=4, col="blue")
ggplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
?col
?colour
?plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
ggtitle("Two sampling locations") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
gplot
showMethods("gplot")
spain_sampling <- readOGR(dsn = "output", layer = "spain")
sicilia_sampling <- readOGR(dsn = "output", layer = "sicilia")
plot(spain_sampling, pch=4, col="blue")
plot(sicilia_sampling, pch=4, col="red")
plot(N_stack[[nlayers(N_stack)]], col = "white")
plot(N_stack[[nlayers(N_stack)]], col = "grey")
points(spain_sampling, pch=4, col="blue")
points(sicilia_sampling, pch=4, col="red")
?plot
plot(N_stack[[nlayers(N_stack)]], col = "grey")
points(spain_sampling, pch=2, col="blue")
points(sicilia_sampling, pch=2, col="red")
?points
plot(N_stack[[nlayers(N_stack)]], col = "grey")
points(spain_sampling, pch=20, col="blue")
points(sicilia_sampling, pch=20, col="red")
?points
points(sicilia_sampling, pch=4, col="red", cex = 1)
plot(N_stack[[nlayers(N_stack)]], col = "grey")
points(spain_sampling, pch=4 col="blue")
points(sicilia_sampling, pch=4, col="red", cex = 1)
plot(N_stack[[nlayers(N_stack)]], col = "grey")
points(spain_sampling, pch=4 col="blue", cex = 0.5)
points(spain_sampling, pch=4, col="blue", cex = 0.5)
points(sicilia_sampling, pch=4, col="red", cex = 0.5)
?plot
?plot
(palette(gray(seq(0,.9,len = 25))))
?scale_fill_gradient
gplot(N_stack[[nlayers(N_stack)]]) +
#geom_tile(aes(fill=value)) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(spain_sampling) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
?geom_point
spain_sampling
?SpatialPointsDataFrame
spain_sampling[[1]]
spain_sampling[[0]]
spain_sampling[[2]]
lat(spain_sampling)
spain_sampling[,1]
spain_sampling[0,1]
spain_sampling[[1]]
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(spain_sampling) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(aes(spain_sampling)) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
?aes
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point() +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
spain_sampling
spain_sampling$x
?SpatialPointsDataFrame
as.matrix(spain_sampling)
spain_sampling$m
?ggplot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=spain_sampling) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
as.data.frame(spain_sampling)
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(x=as.data.frame(spain_sampling)$coords.x1, y= as.data.frame(spain_sampling)$coords.x2) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(aes(x=as.data.frame(spain_sampling)$coords.x1, y= as.data.frame(spain_sampling)$coords.x2)) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
?aes
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes())
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=cords.x1, y=coords.x2))
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=cords.x1, y=coords.x2)) +
#geom_point(aes(x=as.data.frame(spain_sampling)$coords.x1, y= as.data.frame(spain_sampling)$coords.x2)) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=coords.x1, y=coords.x2)) +
#geom_point(aes(x=as.data.frame(spain_sampling)$coords.x1, y= as.data.frame(spain_sampling)$coords.x2)) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=coords.x1, y=coords.x2)) +
geom_point(data=as.data.frame(sicilia_sampling), aes(x=coords.x1, y=coords.x2)) +
#geom_point(aes(x=as.data.frame(spain_sampling)$coords.x1, y= as.data.frame(spain_sampling)$coords.x2)) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="blue") +
geom_point(data=as.data.frame(sicilia_sampling), aes(x=coords.x1, y=coords.x2), pch=4, col="red") +
#geom_point(aes(x=as.data.frame(spain_sampling)$coords.x1, y= as.data.frame(spain_sampling)$coords.x2)) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="blue") +
geom_point(data=as.data.frame(sicilia_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="red") +
#geom_point(aes(x=as.data.frame(spain_sampling)$coords.x1, y= as.data.frame(spain_sampling)$coords.x2)) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
points(spain_sampling, pch=20, col="blue")
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="blue") +
geom_point(data=as.data.frame(sicilia_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="pink") +
#geom_point(aes(x=as.data.frame(spain_sampling)$coords.x1, y= as.data.frame(spain_sampling)$coords.x2)) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="blue") +
geom_point(data=as.data.frame(sicilia_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="red") +
#geom_point(aes(x=as.data.frame(spain_sampling)$coords.x1, y= as.data.frame(spain_sampling)$coords.x2)) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="grey",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="blue") +
geom_point(data=as.data.frame(sicilia_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="orange") +
#geom_point(aes(x=as.data.frame(spain_sampling)$coords.x1, y= as.data.frame(spain_sampling)$coords.x2)) +
#ggtitle("Two sampling locations") +
#labs(x = "lon") +
#labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="grey",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
png( filename = "sampling")
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="blue") +
geom_point(data=as.data.frame(sicilia_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="orange") +
ggtitle("Two sampling locations: Spain and Sicilia") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="grey",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
dev.off() #only 129kb in size
png( filename = "sampling.png", width=4, height=3.352, units="in", res=300)
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="blue") +
geom_point(data=as.data.frame(sicilia_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="orange") +
ggtitle("Two sampling locations: Spain and Sicilia") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="grey",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
dev.off() #only 129kb in size
png( filename = "sampling.png")
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="blue") +
geom_point(data=as.data.frame(sicilia_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="orange") +
ggtitle("Two sampling locations: Spain and Sicilia") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="grey",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
dev.off() #only 129kb in size
getwd()
png( filename = "sampling.png")
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="blue") +
geom_point(data=as.data.frame(sicilia_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="orange") +
ggtitle("Two sampling locations: Spain and Sicilia") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="grey",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
dev.off() #only 129kb in size
png( filename = "sampling.png")
gplot(N_stack[[nlayers(N_stack)]]) +
geom_tile(aes(fill=value)) +
geom_point(data=as.data.frame(spain_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="blue") +
geom_point(data=as.data.frame(sicilia_sampling), aes(x=coords.x1, y=coords.x2), pch=20, col="orange") +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="grey",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
dev.off() #only 129kb in size
N_stack <- stack("output/N.tif")
# Get range of data values across the two rasters
rng <- c()
for(i in 1:99){
rng = range( c( rng, getValues( N_stack[[i]] ) ), na.rm = TRUE )
}
gif_plot <- function(raster, rng, title, subtitle){
gplot(raster) +
geom_tile(aes(fill=value)) +
ggtitle(title, subtitle) +
labs(x = "lon") +
labs(y = "lat") +
scale_fill_gradient(name = "N value", low="white", high="green",
breaks=seq(0,1000,20),  # Set whatever breaks you want
limits=c(floor(rng[1]), ceiling(rng[2])))  # Set the same limits for each plot
}
for(i in 1:min(99, nlayers(N_stack))){
if(i < 11){
file= paste0(0, i-1, ".png")
}else{
file= paste0(i-1, ".png")
}
png( filename = paste0(getwd(), "/treatment/", file), width=4, height=3.352, units="in", res=300)
print( gif_plot( N_stack[[i]], rng, "", paste("Generation", i)) )
dev.off() #only 129kb in size
}
# To get the animated GIF, run in a terminal
system("convert treatment/*.png -delay 1 -loop 0 history.gif")
library("ggtree")
tree <- read.tree("output/trees.txt")
tree
dd <- data.frame(taxa  = tree$tip.label,
place = factor(tree$tip.label)
)
p <- ggtree(tree)
p <- p %<+% dd + geom_tippoint(aes(color=place), alpha=0.25)
p + theme(legend.position="right")
